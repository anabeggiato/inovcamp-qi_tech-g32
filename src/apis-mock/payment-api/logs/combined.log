{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-API] Payment API Mock rodando na porta 3002\u001b[39m","timestamp":"2025-10-04 12:53:44"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-ROUTES] Listando opções de pagamento\u001b[39m","timestamp":"2025-10-04 12:54:14"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] System accounts initialized\u001b[39m","timestamp":"2025-10-04 13:41:04"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-API] Payment API Mock rodando na porta 3002\u001b[39m","timestamp":"2025-10-04 13:41:04"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-ROUTES] Listando opções de pagamento\u001b[39m","timestamp":"2025-10-04 13:41:31"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-ROUTES] Listando opções de pagamento\u001b[39m","timestamp":"2025-10-04 13:52:48"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-ROUTES] Criando plano de pagamento para empréstimo 1\u001b[39m","paymentTiming":"during_studies","timestamp":"2025-10-04 13:53:04"}
{"installments":12,"level":"\u001b[32minfo\u001b[39m","loanId":"1","message":"\u001b[32m[PAYMENT-ROUTES] Plano de pagamento criado com sucesso\u001b[39m","timestamp":"2025-10-04 13:53:04"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[INSTALLMENT-ROUTES] Listando parcelas do empréstimo 1\u001b[39m","timestamp":"2025-10-04 13:53:14"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[INSTALLMENT-ROUTES] Encontradas 12 parcelas\u001b[39m","timestamp":"2025-10-04 13:53:14"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[INSTALLMENT-ROUTES] Gerando resumo de pagamentos do empréstimo 1\u001b[39m","timestamp":"2025-10-04 13:53:24"}
{"level":"\u001b[32minfo\u001b[39m","loanId":"1","message":"\u001b[32m[INSTALLMENT-ROUTES] Resumo gerado com sucesso\u001b[39m","overdue":0,"paid":0,"paidAmount":0,"pending":12,"remainingAmount":4079.3241476923517,"timestamp":"2025-10-04 13:53:24","totalAmount":5000,"totalInstallments":12}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] System accounts initialized\u001b[39m","timestamp":"2025-10-04 13:58:53"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-API] Payment API Mock rodando na porta 3002\u001b[39m","timestamp":"2025-10-04 13:58:54"}
{"amount":10000,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-ROUTES] Processando depósito do investidor 2\u001b[39m","paymentMethod":"pix","timestamp":"2025-10-04 14:02:07"}
{"amount":10000,"error":"connect ECONNREFUSED ::1:5432","investorId":"2","level":"\u001b[31merror\u001b[39m","message":"\u001b[31m[INVESTOR-DEPOSITS] Erro ao processar depósito\u001b[39m","timestamp":"2025-10-04 14:02:07"}
{"address":"::1","code":"ECONNREFUSED","errno":-4078,"level":"\u001b[31merror\u001b[39m","message":"\u001b[31m[CUSTODY-ROUTES] Erro ao processar depósito connect ECONNREFUSED ::1:5432\u001b[39m","port":5432,"stack":"Error: connect ECONNREFUSED ::1:5432\n    at C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\node_modules\\pg-pool\\index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\shared\\database.js:42:24)\n    at async Object.processInvestorDeposit (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\custody\\investorDeposits.js:24:32)\n    at async C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\routes\\custody.js:24:24","syscall":"connect","timestamp":"2025-10-04 14:02:07"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-ROUTES] Listando opções de pagamento\u001b[39m","timestamp":"2025-10-04 14:02:17"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-ROUTES] Criando plano de pagamento para empréstimo 1\u001b[39m","paymentTiming":"during_studies","timestamp":"2025-10-04 14:02:25"}
{"address":"::1","code":"ECONNREFUSED","errno":-4078,"level":"\u001b[31merror\u001b[39m","message":"\u001b[31m[PAYMENT-ROUTES] Erro ao criar plano de pagamento connect ECONNREFUSED ::1:5432\u001b[39m","port":5432,"stack":"Error: connect ECONNREFUSED ::1:5432\n    at C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\node_modules\\pg-pool\\index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async transaction (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\shared\\database.js:58:20)\n    at async Object.createPaymentPlan (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\services\\paymentService.js:81:9)\n    at async C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\routes\\payments.js:44:29","syscall":"connect","timestamp":"2025-10-04 14:02:25"}
{"amount":10000,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-ROUTES] Processando depósito do investidor 2\u001b[39m","paymentMethod":"pix","timestamp":"2025-10-04 14:03:32"}
{"amount":10000,"error":"connect ECONNREFUSED ::1:5432","investorId":"2","level":"\u001b[31merror\u001b[39m","message":"\u001b[31m[INVESTOR-DEPOSITS] Erro ao processar depósito\u001b[39m","timestamp":"2025-10-04 14:03:32"}
{"address":"::1","code":"ECONNREFUSED","errno":-4078,"level":"\u001b[31merror\u001b[39m","message":"\u001b[31m[CUSTODY-ROUTES] Erro ao processar depósito connect ECONNREFUSED ::1:5432\u001b[39m","port":5432,"stack":"Error: connect ECONNREFUSED ::1:5432\n    at C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\node_modules\\pg-pool\\index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\shared\\database.js:42:24)\n    at async Object.processInvestorDeposit (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\custody\\investorDeposits.js:24:32)\n    at async C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\routes\\custody.js:24:24","syscall":"connect","timestamp":"2025-10-04 14:03:32"}
{"amount":10000,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-ROUTES] Processando depósito do investidor 2\u001b[39m","paymentMethod":"pix","timestamp":"2025-10-04 14:06:03"}
{"amount":10000,"error":"connect ECONNREFUSED ::1:5432","investorId":"2","level":"\u001b[31merror\u001b[39m","message":"\u001b[31m[INVESTOR-DEPOSITS] Erro ao processar depósito\u001b[39m","timestamp":"2025-10-04 14:06:03"}
{"address":"::1","code":"ECONNREFUSED","errno":-4078,"level":"\u001b[31merror\u001b[39m","message":"\u001b[31m[CUSTODY-ROUTES] Erro ao processar depósito connect ECONNREFUSED ::1:5432\u001b[39m","port":5432,"stack":"Error: connect ECONNREFUSED ::1:5432\n    at C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\node_modules\\pg-pool\\index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\shared\\database.js:42:24)\n    at async Object.processInvestorDeposit (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\custody\\investorDeposits.js:24:32)\n    at async C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\routes\\custody.js:24:24","syscall":"connect","timestamp":"2025-10-04 14:06:03"}
{"amount":10000,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-ROUTES] Processando depósito do investidor 2\u001b[39m","paymentMethod":"pix","timestamp":"2025-10-04 14:06:40"}
{"amount":10000,"error":"connect ECONNREFUSED ::1:5432","investorId":"2","level":"\u001b[31merror\u001b[39m","message":"\u001b[31m[INVESTOR-DEPOSITS] Erro ao processar depósito\u001b[39m","timestamp":"2025-10-04 14:06:40"}
{"address":"::1","code":"ECONNREFUSED","errno":-4078,"level":"\u001b[31merror\u001b[39m","message":"\u001b[31m[CUSTODY-ROUTES] Erro ao processar depósito connect ECONNREFUSED ::1:5432\u001b[39m","port":5432,"stack":"Error: connect ECONNREFUSED ::1:5432\n    at C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\node_modules\\pg-pool\\index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\shared\\database.js:42:24)\n    at async Object.processInvestorDeposit (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\custody\\investorDeposits.js:24:32)\n    at async C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\routes\\custody.js:24:24","syscall":"connect","timestamp":"2025-10-04 14:06:40"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] System accounts initialized\u001b[39m","timestamp":"2025-10-04 14:36:00"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-API] Payment API Mock rodando na porta 3002\u001b[39m","timestamp":"2025-10-04 14:36:00"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-ROUTES] Criando plano de pagamento para empréstimo 1\u001b[39m","paymentTiming":"during_studies","timestamp":"2025-10-04 14:37:10"}
{"address":"::1","code":"ECONNREFUSED","errno":-4078,"level":"\u001b[31merror\u001b[39m","message":"\u001b[31m[PAYMENT-ROUTES] Erro ao criar plano de pagamento connect ECONNREFUSED ::1:5432\u001b[39m","port":5432,"stack":"Error: connect ECONNREFUSED ::1:5432\n    at C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\node_modules\\pg-pool\\index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async transaction (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\shared\\database.js:64:20)\n    at async Object.createPaymentPlan (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\services\\paymentService.js:81:9)\n    at async C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\routes\\payments.js:44:29","syscall":"connect","timestamp":"2025-10-04 14:37:10"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] System accounts initialized\u001b[39m","timestamp":"2025-10-04 14:39:01"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-API] Payment API Mock rodando na porta 3002\u001b[39m","timestamp":"2025-10-04 14:39:01"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-ROUTES] Criando plano de pagamento para empréstimo 1\u001b[39m","paymentTiming":"during_studies","timestamp":"2025-10-04 14:39:15"}
{"address":"::1","code":"ECONNREFUSED","errno":-4078,"level":"\u001b[31merror\u001b[39m","message":"\u001b[31m[PAYMENT-ROUTES] Erro ao criar plano de pagamento connect ECONNREFUSED ::1:5432\u001b[39m","port":5432,"stack":"Error: connect ECONNREFUSED ::1:5432\n    at C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\node_modules\\pg-pool\\index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async transaction (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\shared\\database.js:64:20)\n    at async Object.createPaymentPlan (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\services\\paymentService.js:81:9)\n    at async C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\routes\\payments.js:44:29","syscall":"connect","timestamp":"2025-10-04 14:39:15"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-ROUTES] Criando plano de pagamento para empréstimo 1\u001b[39m","paymentTiming":"during_studies","timestamp":"2025-10-04 14:39:31"}
{"address":"::1","code":"ECONNREFUSED","errno":-4078,"level":"\u001b[31merror\u001b[39m","message":"\u001b[31m[PAYMENT-ROUTES] Erro ao criar plano de pagamento connect ECONNREFUSED ::1:5432\u001b[39m","port":5432,"stack":"Error: connect ECONNREFUSED ::1:5432\n    at C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\node_modules\\pg-pool\\index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async transaction (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\shared\\database.js:64:20)\n    at async Object.createPaymentPlan (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\services\\paymentService.js:81:9)\n    at async C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\routes\\payments.js:44:29","syscall":"connect","timestamp":"2025-10-04 14:39:31"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] System accounts initialized\u001b[39m","timestamp":"2025-10-04 14:40:46"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-API] Payment API Mock rodando na porta 3002\u001b[39m","timestamp":"2025-10-04 14:40:46"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-ROUTES] Criando plano de pagamento para empréstimo LOAN-123\u001b[39m","paymentTiming":"during_studies","timestamp":"2025-10-04 14:40:59"}
{"address":"::1","code":"ECONNREFUSED","errno":-4078,"level":"\u001b[31merror\u001b[39m","message":"\u001b[31m[PAYMENT-ROUTES] Erro ao criar plano de pagamento connect ECONNREFUSED ::1:5432\u001b[39m","port":5432,"stack":"Error: connect ECONNREFUSED ::1:5432\n    at C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\node_modules\\pg-pool\\index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async transaction (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\shared\\database.js:68:20)\n    at async Object.createPaymentPlan (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\services\\paymentService.js:81:9)\n    at async C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\routes\\payments.js:44:29","syscall":"connect","timestamp":"2025-10-04 14:40:59"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] System accounts initialized\u001b[39m","timestamp":"2025-10-04 14:43:40"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-API] Payment API Mock rodando na porta 3002\u001b[39m","timestamp":"2025-10-04 14:43:40"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] System accounts initialized\u001b[39m","timestamp":"2025-10-04 14:45:22"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-API] Payment API Mock rodando na porta 3002\u001b[39m","timestamp":"2025-10-04 14:45:22"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] System accounts initialized\u001b[39m","timestamp":"2025-10-04 14:49:17"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-API] Payment API Mock rodando na porta 3002\u001b[39m","timestamp":"2025-10-04 14:49:17"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-ROUTES] Criando plano de pagamento para empréstimo LOAN-123\u001b[39m","paymentTiming":"during_studies","timestamp":"2025-10-04 14:49:25"}
{"code":"22P02","file":"numutils.c","length":151,"level":"\u001b[31merror\u001b[39m","line":"616","message":"\u001b[31m[PAYMENT-ROUTES] Erro ao criar plano de pagamento invalid input syntax for type integer: \"LOAN-123\"\u001b[39m","name":"error","routine":"pg_strtoint32_safe","severity":"ERROR","stack":"error: invalid input syntax for type integer: \"LOAN-123\"\n    at C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\node_modules\\pg\\lib\\client.js:545:17\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\services\\paymentService.js:83:13\n    at async transaction (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\shared\\database.js:71:24)\n    at async Object.createPaymentPlan (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\services\\paymentService.js:81:9)\n    at async C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\routes\\payments.js:44:29","timestamp":"2025-10-04 14:49:27","where":"unnamed portal parameter $7 = '...'"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-ROUTES] Criando plano de pagamento para empréstimo 123\u001b[39m","paymentTiming":"during_studies","timestamp":"2025-10-04 14:49:50"}
{"code":"23503","constraint":"installments_loan_id_foreign","detail":"Key (loan_id)=(123) is not present in table \"loans\".","file":"ri_triggers.c","length":278,"level":"\u001b[31merror\u001b[39m","line":"2599","message":"\u001b[31m[PAYMENT-ROUTES] Erro ao criar plano de pagamento insert or update on table \"installments\" violates foreign key constraint \"installments_loan_id_foreign\"\u001b[39m","name":"error","routine":"ri_ReportViolation","schema":"public","severity":"ERROR","stack":"error: insert or update on table \"installments\" violates foreign key constraint \"installments_loan_id_foreign\"\n    at C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\node_modules\\pg\\lib\\client.js:545:17\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\services\\paymentService.js:105:17\n    at async transaction (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\shared\\database.js:71:24)\n    at async Object.createPaymentPlan (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\services\\paymentService.js:81:9)\n    at async C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\routes\\payments.js:44:29","table":"installments","timestamp":"2025-10-04 14:49:51"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-ROUTES] Criando plano de pagamento para empréstimo 1\u001b[39m","paymentTiming":"during_studies","timestamp":"2025-10-04 14:52:18"}
{"installments":12,"level":"\u001b[32minfo\u001b[39m","loanId":1,"message":"\u001b[32m[PAYMENT-ROUTES] Plano de pagamento criado com sucesso\u001b[39m","timestamp":"2025-10-04 14:52:22"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] System accounts initialized\u001b[39m","timestamp":"2025-10-04 15:08:36"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-API] Payment API Mock rodando na porta 3002\u001b[39m","timestamp":"2025-10-04 15:08:36"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-ROUTES] Consultando status do pagamento 1\u001b[39m","timestamp":"2025-10-04 15:09:43"}
{"level":"\u001b[31merror\u001b[39m","message":"\u001b[31m[PAYMENT-ROUTES] Erro ao consultar status Pagamento não encontrado\u001b[39m","stack":"Error: Pagamento não encontrado\n    at Object.getPaymentStatus (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\payment-methods\\paymentMethods.js:173:15)\n    at Object.getOrchestratedPaymentStatus (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\services\\paymentService.js:587:42)\n    at C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\routes\\payments.js:148:39\n    at Layer.handle [as handle_request] (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\route.js:149:13)\n    at Route.dispatch (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\route.js:119:3)\n    at Layer.handle [as handle_request] (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\index.js:284:15\n    at param (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at param (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\index.js:376:14)","timestamp":"2025-10-04 15:09:43"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-ROUTES] Consultando status do pagamento LOAN-123\u001b[39m","timestamp":"2025-10-04 15:09:59"}
{"level":"\u001b[31merror\u001b[39m","message":"\u001b[31m[PAYMENT-ROUTES] Erro ao consultar status Pagamento não encontrado\u001b[39m","stack":"Error: Pagamento não encontrado\n    at Object.getPaymentStatus (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\payment-methods\\paymentMethods.js:173:15)\n    at Object.getOrchestratedPaymentStatus (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\services\\paymentService.js:587:42)\n    at C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\routes\\payments.js:148:39\n    at Layer.handle [as handle_request] (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\route.js:149:13)\n    at Route.dispatch (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\route.js:119:3)\n    at Layer.handle [as handle_request] (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\index.js:284:15\n    at param (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at param (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\index.js:376:14)","timestamp":"2025-10-04 15:09:59"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] System accounts initialized\u001b[39m","timestamp":"2025-10-04 15:15:16"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-API] Payment API Mock rodando na porta 3002\u001b[39m","timestamp":"2025-10-04 15:15:16"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-ROUTES] Processando pagamento da parcela INST-123\u001b[39m","paymentMethod":"pix","timestamp":"2025-10-04 15:15:31"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] System accounts initialized\u001b[39m","timestamp":"2025-10-04 15:19:14"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-API] Payment API Mock rodando na porta 3002\u001b[39m","timestamp":"2025-10-04 15:19:14"}
{"amount":500,"from_user_id":2,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Criando novo pagamento\u001b[39m","payment_method":"pix","timestamp":"2025-10-04 15:21:10","to_user_id":3}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Consultando pagamento balance\u001b[39m","timestamp":"2025-10-04 15:21:28"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Consultando pagamento balance\u001b[39m","timestamp":"2025-10-04 15:21:48"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Consultando pagamento balance\u001b[39m","timestamp":"2025-10-04 15:22:06"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Consultando pagamento PAY-123\u001b[39m","timestamp":"2025-10-04 15:23:00"}
{"amount":500,"from_user_id":2,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Criando novo pagamento\u001b[39m","payment_method":"pix","timestamp":"2025-10-04 15:25:08","to_user_id":3}
{"amount":500,"entryId":"LEDGER_MGCLS7YZ_3GU7H","fromAccount":"user_2","level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] Ledger entry created\u001b[39m","timestamp":"2025-10-04 15:25:10","toAccount":"user_3"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] System accounts initialized\u001b[39m","timestamp":"2025-10-04 15:26:03"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-API] Payment API Mock rodando na porta 3002\u001b[39m","timestamp":"2025-10-04 15:26:03"}
{"amount":500,"from_user_id":2,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Criando novo pagamento\u001b[39m","payment_method":"pix","timestamp":"2025-10-04 15:26:13","to_user_id":3}
{"amount":500,"entryId":"LEDGER_MGCLTMD2_TGXNJ","fromAccount":"user_2","level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] Ledger entry created\u001b[39m","timestamp":"2025-10-04 15:26:15","toAccount":"user_3"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] System accounts initialized\u001b[39m","timestamp":"2025-10-04 15:30:11"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-API] Payment API Mock rodando na porta 3002\u001b[39m","timestamp":"2025-10-04 15:30:11"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] System accounts initialized\u001b[39m","timestamp":"2025-10-04 15:33:30"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-API] Payment API Mock rodando na porta 3002\u001b[39m","timestamp":"2025-10-04 15:33:30"}
{"initial_balance":1000,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-ACCOUNTS] Criando conta de custódia\u001b[39m","timestamp":"2025-10-04 15:33:56","user_id":2,"user_type":"investor"}
{"initialBalance":1000,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-SERVICE] Conta de custódia criada\u001b[39m","timestamp":"2025-10-04 15:33:56","userId":2,"userType":"investor"}
{"initial_balance":1000,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-ACCOUNTS] Criando conta de custódia\u001b[39m","timestamp":"2025-10-04 15:34:00","user_id":2,"user_type":"investor"}
{"level":"\u001b[31merror\u001b[39m","message":"\u001b[31m[CUSTODY-ACCOUNTS] Erro ao criar conta de custódia Conta de custódia já existe para este usuário\u001b[39m","stack":"Error: Conta de custódia já existe para este usuário\n    at Object.createCustodyAccount (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\custody\\custodyService.js:279:15)\n    at C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\routes\\custody-accounts.js:24:46\n    at Layer.handle [as handle_request] (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\route.js:149:13)\n    at Route.dispatch (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\route.js:119:3)\n    at Layer.handle [as handle_request] (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\index.js:284:15\n    at Function.process_params (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\index.js:346:12)\n    at next (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\index.js:280:10)\n    at Function.handle (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\index.js:175:3)","timestamp":"2025-10-04 15:34:00"}
{"initial_balance":1000,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-ACCOUNTS] Criando conta de custódia\u001b[39m","timestamp":"2025-10-04 15:34:09","user_id":3,"user_type":"investor"}
{"initialBalance":1000,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-SERVICE] Conta de custódia criada\u001b[39m","timestamp":"2025-10-04 15:34:09","userId":3,"userType":"investor"}
{"amount":500,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-ACCOUNTS] Depositando valor na conta do usuário 3\u001b[39m","payment_method":"pix","timestamp":"2025-10-04 15:34:49"}
{"level":"\u001b[31merror\u001b[39m","message":"\u001b[31m[CUSTODY-ACCOUNTS] Erro ao depositar valor custodyService.depositToAccount is not a function\u001b[39m","stack":"TypeError: custodyService.depositToAccount is not a function\n    at C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\routes\\custody-accounts.js:76:46\n    at Layer.handle [as handle_request] (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\route.js:149:13)\n    at Route.dispatch (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\route.js:119:3)\n    at Layer.handle [as handle_request] (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\index.js:284:15\n    at param (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at param (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\index.js:376:14)\n    at Function.process_params (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\index.js:421:3)\n    at next (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\index.js:280:10)","timestamp":"2025-10-04 15:34:49"}
{"amount":500,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-ACCOUNTS] Depositando valor na conta do usuário 3\u001b[39m","payment_method":"pix","timestamp":"2025-10-04 15:35:12"}
{"level":"\u001b[31merror\u001b[39m","message":"\u001b[31m[CUSTODY-ACCOUNTS] Erro ao depositar valor custodyService.depositToAccount is not a function\u001b[39m","stack":"TypeError: custodyService.depositToAccount is not a function\n    at C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\routes\\custody-accounts.js:76:46\n    at Layer.handle [as handle_request] (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\route.js:149:13)\n    at Route.dispatch (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\route.js:119:3)\n    at Layer.handle [as handle_request] (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\index.js:284:15\n    at param (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at param (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\index.js:376:14)\n    at Function.process_params (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\index.js:421:3)\n    at next (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\index.js:280:10)","timestamp":"2025-10-04 15:35:12"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] System accounts initialized\u001b[39m","timestamp":"2025-10-04 15:38:29"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-API] Payment API Mock rodando na porta 3002\u001b[39m","timestamp":"2025-10-04 15:38:29"}
{"amount":500,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-ACCOUNTS] Depositando valor na conta do usuário 3\u001b[39m","payment_method":"pix","timestamp":"2025-10-04 15:38:35"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-SERVICE] Conta criada automaticamente: user_3\u001b[39m","timestamp":"2025-10-04 15:38:35"}
{"amount":500,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-SERVICE] Depósito realizado\u001b[39m","newBalance":500,"paymentMethod":"pix","timestamp":"2025-10-04 15:38:35","userId":"3"}
{"amount":100,"from_user_id":3,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Criando novo pagamento\u001b[39m","payment_method":"pix","timestamp":"2025-10-04 15:39:29","to_user_id":3}
{"amount":100,"entryId":"LEDGER_MGCMAOMS_W460E","fromAccount":"user_3","level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] Ledger entry created\u001b[39m","timestamp":"2025-10-04 15:39:31","toAccount":"user_3"}
{"amount":100,"entryId":"LEDGER_MGCMAOMS_W460E","fromAccount":"user_3","level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] Ledger entry completed\u001b[39m","timestamp":"2025-10-04 15:39:32","toAccount":"user_3"}
{"amount":100,"description":"Pagamento teste","fromAccountId":"user_3","level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-SERVICE] Transferência realizada\u001b[39m","timestamp":"2025-10-04 15:39:32","toAccountId":"user_3"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Consultando pagamento PAY_MGCMAN30_9FYVE\u001b[39m","timestamp":"2025-10-04 15:40:28"}
{"amount":50,"from_user_id":3,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Transferindo valores entre contas\u001b[39m","timestamp":"2025-10-04 15:40:57","to_user_id":3}
{"amount":50,"description":"Transferência teste","fromAccountId":"user_3","level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-SERVICE] Transferência realizada\u001b[39m","timestamp":"2025-10-04 15:40:58","toAccountId":"user_3"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Consultando pagamento transactions\u001b[39m","timestamp":"2025-10-04 15:42:06"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Consultando pagamento transactions\u001b[39m","timestamp":"2025-10-04 15:42:14"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Consultando pagamento transactions\u001b[39m","timestamp":"2025-10-04 15:42:37"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Consultando pagamento PAY_MGCMAN30_9FYVE\u001b[39m","timestamp":"2025-10-04 15:44:09"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Consultando pagamento balance\u001b[39m","timestamp":"2025-10-04 15:46:41"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Consultando pagamento balance\u001b[39m","timestamp":"2025-10-04 15:46:58"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Consultando pagamento balance\u001b[39m","timestamp":"2025-10-04 15:47:01"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] System accounts initialized\u001b[39m","timestamp":"2025-10-04 15:47:54"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-API] Payment API Mock rodando na porta 3002\u001b[39m","timestamp":"2025-10-04 15:47:54"}
{"initial_balance":2000,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-ACCOUNTS] Criando conta de custódia\u001b[39m","timestamp":"2025-10-04 15:48:18","user_id":4,"user_type":"investor"}
{"initialBalance":2000,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-SERVICE] Conta de custódia criada\u001b[39m","timestamp":"2025-10-04 15:48:18","userId":4,"userType":"investor"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-ACCOUNTS] Consultando conta de custódia do usuário 2\u001b[39m","timestamp":"2025-10-04 15:48:27"}
{"initial_balance":2000,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-ACCOUNTS] Criando conta de custódia\u001b[39m","timestamp":"2025-10-04 15:48:45","user_id":2,"user_type":"student"}
{"initialBalance":2000,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-SERVICE] Conta de custódia criada\u001b[39m","timestamp":"2025-10-04 15:48:45","userId":2,"userType":"student"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-ACCOUNTS] Consultando conta de custódia do usuário 2\u001b[39m","timestamp":"2025-10-04 15:48:52"}
{"amount":500,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-ACCOUNTS] Depositando valor na conta do usuário 2\u001b[39m","payment_method":"pix","timestamp":"2025-10-04 15:49:07"}
{"amount":500,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-SERVICE] Depósito realizado\u001b[39m","newBalance":2500,"paymentMethod":"pix","timestamp":"2025-10-04 15:49:07","userId":"2"}
{"amount":500,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-ACCOUNTS] Depositando valor na conta do usuário 4\u001b[39m","payment_method":"pix","timestamp":"2025-10-04 15:49:33"}
{"amount":500,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-SERVICE] Depósito realizado\u001b[39m","newBalance":2500,"paymentMethod":"pix","timestamp":"2025-10-04 15:49:33","userId":"4"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-ACCOUNTS] Consultando conta de custódia do usuário 4\u001b[39m","timestamp":"2025-10-04 15:50:02"}
{"amount":300,"from_user_id":4,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Criando novo pagamento\u001b[39m","payment_method":"pix","timestamp":"2025-10-04 15:50:56","to_user_id":2}
{"amount":300,"entryId":"LEDGER_MGCMPE8R_JH3AJ","fromAccount":"user_4","level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] Ledger entry created\u001b[39m","timestamp":"2025-10-04 15:50:58","toAccount":"user_2"}
{"amount":300,"entryId":"LEDGER_MGCMPE8R_JH3AJ","fromAccount":"user_4","level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] Ledger entry completed\u001b[39m","timestamp":"2025-10-04 15:50:58","toAccount":"user_2"}
{"amount":300,"description":"Pagamento investidor para estudante","fromAccountId":"user_4","level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-SERVICE] Transferência realizada\u001b[39m","timestamp":"2025-10-04 15:50:59","toAccountId":"user_2"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Consultando pagamento PAY_MGCMPCOZ_UNXU\u001b[39m","timestamp":"2025-10-04 15:51:21"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Consultando pagamento PAY_MGCMPCOZ_UNXUS\u001b[39m","timestamp":"2025-10-04 15:51:38"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Consultando pagamento balance\u001b[39m","timestamp":"2025-10-04 15:52:30"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Consultando pagamento balance\u001b[39m","timestamp":"2025-10-04 15:52:44"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Consultando pagamento balance\u001b[39m","timestamp":"2025-10-04 15:52:48"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Consultando pagamento balance\u001b[39m","timestamp":"2025-10-04 15:53:03"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Consultando pagamento balance\u001b[39m","timestamp":"2025-10-04 15:55:30"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] System accounts initialized\u001b[39m","timestamp":"2025-10-04 15:56:11"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-API] Payment API Mock rodando na porta 3002\u001b[39m","timestamp":"2025-10-04 15:56:11"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Consultando saldo do usuário 2\u001b[39m","timestamp":"2025-10-04 15:56:31"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-SERVICE] Conta criada automaticamente: user_2\u001b[39m","timestamp":"2025-10-04 15:56:31"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Consultando saldo do usuário 4\u001b[39m","timestamp":"2025-10-04 15:56:38"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-SERVICE] Conta criada automaticamente: user_4\u001b[39m","timestamp":"2025-10-04 15:56:38"}
{"initial_balance":2000,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-ACCOUNTS] Criando conta de custódia\u001b[39m","timestamp":"2025-10-04 15:57:37","user_id":4,"user_type":"investor"}
{"level":"\u001b[31merror\u001b[39m","message":"\u001b[31m[CUSTODY-ACCOUNTS] Erro ao criar conta de custódia Conta de custódia já existe para este usuário\u001b[39m","stack":"Error: Conta de custódia já existe para este usuário\n    at Object.createCustodyAccount (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\custody\\custodyService.js:279:15)\n    at C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\routes\\custody-accounts.js:24:46\n    at Layer.handle [as handle_request] (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\route.js:149:13)\n    at Route.dispatch (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\route.js:119:3)\n    at Layer.handle [as handle_request] (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\index.js:284:15\n    at Function.process_params (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\index.js:346:12)\n    at next (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\index.js:280:10)\n    at Function.handle (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\node_modules\\express\\lib\\router\\index.js:175:3)","timestamp":"2025-10-04 15:57:37"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-ACCOUNTS] Consultando conta de custódia do usuário 4\u001b[39m","timestamp":"2025-10-04 15:58:22"}
{"amount":500,"from_user_id":4,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Criando novo pagamento\u001b[39m","payment_method":"pix","timestamp":"2025-10-04 15:59:13","to_user_id":2}
{"amount":500,"entryId":"LEDGER_MGCN01ZP_QTAQ4","fromAccount":"user_4","level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] Ledger entry created\u001b[39m","timestamp":"2025-10-04 15:59:15","toAccount":"user_2"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] System accounts initialized\u001b[39m","timestamp":"2025-10-04 16:09:37"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-API] Payment API Mock rodando na porta 3002\u001b[39m","timestamp":"2025-10-04 16:09:37"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-ACCOUNTS] Consultando conta de custódia do usuário 4\u001b[39m","timestamp":"2025-10-04 16:10:36"}
{"initial_balance":2000,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-ACCOUNTS] Criando conta de custódia\u001b[39m","timestamp":"2025-10-04 16:13:45","user_id":5,"user_type":"investor"}
{"initialBalance":2000,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-SERVICE] Conta de custódia criada\u001b[39m","timestamp":"2025-10-04 16:13:45","userId":5,"userType":"investor"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] System accounts initialized\u001b[39m","timestamp":"2025-10-04 16:16:34"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-API] Payment API Mock rodando na porta 3002\u001b[39m","timestamp":"2025-10-04 16:16:34"}
{"initial_balance":2000,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-ACCOUNTS] Criando conta de custódia\u001b[39m","timestamp":"2025-10-04 16:16:44","user_id":6,"user_type":"investor"}
{"cause":{},"level":"\u001b[31merror\u001b[39m","message":"\u001b[31m[CUSTODY-SERVICE] Erro ao criar conta de custódia: Connection terminated due to connection timeout\u001b[39m","stack":"Error: Connection terminated due to connection timeout\n    at C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\node_modules\\pg-pool\\index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\shared\\database.js:52:24)\n    at async Object.createCustodyAccount (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\custody\\custodyService.js:284:26)\n    at async C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\routes\\custody-accounts.js:24:25","timestamp":"2025-10-04 16:16:49"}
{"cause":{},"level":"\u001b[31merror\u001b[39m","message":"\u001b[31m[CUSTODY-ACCOUNTS] Erro ao criar conta de custódia Connection terminated due to connection timeout\u001b[39m","stack":"Error: Connection terminated due to connection timeout\n    at C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\node_modules\\pg-pool\\index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\shared\\database.js:52:24)\n    at async Object.createCustodyAccount (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\custody\\custodyService.js:284:26)\n    at async C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\routes\\custody-accounts.js:24:25","timestamp":"2025-10-04 16:16:49"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] System accounts initialized\u001b[39m","timestamp":"2025-10-04 16:17:50"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-API] Payment API Mock rodando na porta 3002\u001b[39m","timestamp":"2025-10-04 16:17:50"}
{"initial_balance":2000,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-ACCOUNTS] Criando conta de custódia\u001b[39m","timestamp":"2025-10-04 16:17:53","user_id":6,"user_type":"investor"}
{"initialBalance":2000,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-SERVICE] Conta de custódia criada no banco\u001b[39m","timestamp":"2025-10-04 16:17:55","userId":6,"userType":"investor"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] System accounts initialized\u001b[39m","timestamp":"2025-10-04 16:28:29"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-API] Payment API Mock rodando na porta 3002\u001b[39m","timestamp":"2025-10-04 16:28:29"}
{"initial_balance":2000,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-ACCOUNTS] Criando conta de custódia\u001b[39m","timestamp":"2025-10-04 16:28:52","user_id":7,"user_type":"student"}
{"initialBalance":2000,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-SERVICE] Conta de custódia criada no banco\u001b[39m","timestamp":"2025-10-04 16:28:55","userId":7,"userType":"student"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-ACCOUNTS] Consultando conta de custódia do usuário 4\u001b[39m","timestamp":"2025-10-04 16:29:01"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-ACCOUNTS] Consultando conta de custódia do usuário 6\u001b[39m","timestamp":"2025-10-04 16:29:05"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-ACCOUNTS] Consultando conta de custódia do usuário 6\u001b[39m","timestamp":"2025-10-04 16:29:07"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-ACCOUNTS] Consultando conta de custódia do usuário 7\u001b[39m","timestamp":"2025-10-04 16:29:12"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-ACCOUNTS] Consultando conta de custódia do usuário 6\u001b[39m","timestamp":"2025-10-04 16:29:19"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-ACCOUNTS] Consultando conta de custódia do usuário 6\u001b[39m","timestamp":"2025-10-04 16:29:21"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-ACCOUNTS] Consultando conta de custódia do usuário 6\u001b[39m","timestamp":"2025-10-04 16:29:42"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-ACCOUNTS] Consultando conta de custódia do usuário 6\u001b[39m","timestamp":"2025-10-04 16:30:05"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-ACCOUNTS] Consultando conta de custódia do usuário 7\u001b[39m","timestamp":"2025-10-04 16:30:10"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-ACCOUNTS] Consultando conta de custódia do usuário 6\u001b[39m","timestamp":"2025-10-04 16:30:17"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] System accounts initialized\u001b[39m","timestamp":"2025-10-04 16:47:27"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-API] Payment API Mock rodando na porta 3002\u001b[39m","timestamp":"2025-10-04 16:47:27"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Consultando saldo do usuário 6\u001b[39m","timestamp":"2025-10-04 16:49:00"}
{"initial_balance":1000,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-ACCOUNTS] Criando conta de custódia\u001b[39m","timestamp":"2025-10-04 16:51:56","user_id":10,"user_type":"student"}
{"initialBalance":1000,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-SERVICE] Conta de custódia criada no banco\u001b[39m","timestamp":"2025-10-04 16:51:58","userId":10,"userType":"student"}
{"amount":500,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-ACCOUNTS] Depositando valor na conta do usuário 10\u001b[39m","payment_method":"pix","timestamp":"2025-10-04 16:52:44"}
{"amount":500,"error":"null value in column \"id\" of relation \"custody_transactions\" violates not-null constraint","level":"\u001b[31merror\u001b[39m","message":"\u001b[31m[CUSTODY-SERVICE] Erro ao depositar valor\u001b[39m","timestamp":"2025-10-04 16:52:52","userId":"10"}
{"code":"23502","column":"id","detail":"Failing row contains (null, user_10, deposit, 500.00, pix, Depósito via PIX, completed, 2025-10-04 19:52:45.398+00).","file":"execMain.c","length":305,"level":"\u001b[31merror\u001b[39m","line":"1981","message":"\u001b[31m[CUSTODY-ACCOUNTS] Erro ao depositar valor null value in column \"id\" of relation \"custody_transactions\" violates not-null constraint\u001b[39m","name":"error","routine":"ExecConstraints","schema":"public","severity":"ERROR","stack":"error: null value in column \"id\" of relation \"custody_transactions\" violates not-null constraint\n    at C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\node_modules\\pg-pool\\index.js:45:11\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async query (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\shared\\database.js:64:28)\n    at async Object.depositToAccount (C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\custody\\custodyService.js:482:9)\n    at async C:\\Users\\Inteli\\Documents\\GitHub\\inovcamp-qi_tech-g32\\src\\apis-mock\\payment-api\\routes\\custody-accounts.js:76:25","table":"custody_transactions","timestamp":"2025-10-04 16:52:52"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] System accounts initialized\u001b[39m","timestamp":"2025-10-04 16:55:21"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-API] Payment API Mock rodando na porta 3002\u001b[39m","timestamp":"2025-10-04 16:55:21"}
{"amount":500,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-ACCOUNTS] Depositando valor na conta do usuário 10\u001b[39m","payment_method":"pix","timestamp":"2025-10-04 16:55:27"}
{"amount":500,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-SERVICE] Depósito realizado\u001b[39m","newBalance":2000,"paymentMethod":"pix","timestamp":"2025-10-04 16:55:29","userId":"10"}
{"amount":200,"from_user_id":10,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Transferindo valores entre contas\u001b[39m","timestamp":"2025-10-04 16:56:18","to_user_id":6}
{"amount":200,"description":"Transferência teste","fromAccountId":"user_10","level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-SERVICE] Transferência realizada\u001b[39m","timestamp":"2025-10-04 16:56:19","toAccountId":"user_6","transactionId":"TRANSFER_MGCP1GAI_81MO3"}
{"amount":100,"from_user_id":10,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Criando novo pagamento\u001b[39m","payment_method":"pix","timestamp":"2025-10-04 16:56:44","to_user_id":6}
{"amount":100,"entryId":"LEDGER_MGCP2HEB_IHOWD","fromAccount":"user_10","level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] Ledger entry created\u001b[39m","timestamp":"2025-10-04 16:57:07","toAccount":"user_6"}
{"amount":100,"entryId":"LEDGER_MGCP2HEB_IHOWD","fromAccount":"user_10","level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] Ledger entry completed\u001b[39m","timestamp":"2025-10-04 16:57:08","toAccount":"user_6"}
{"amount":100,"description":"Pagamento teste","fromAccountId":"user_10","level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-SERVICE] Transferência realizada\u001b[39m","timestamp":"2025-10-04 16:57:10","toAccountId":"user_6","transactionId":"TRANSFER_MGCP2JK8_W3YON"}
{"amount":100,"from_user_id":10,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Criando novo pagamento\u001b[39m","payment_method":"pix","timestamp":"2025-10-04 16:59:00","to_user_id":6}
{"amount":100,"entryId":"LEDGER_MGCP59C4_IKRD8","fromAccount":"user_10","level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] Ledger entry created\u001b[39m","timestamp":"2025-10-04 16:59:17","toAccount":"user_6"}
{"amount":100,"entryId":"LEDGER_MGCP59C4_IKRD8","fromAccount":"user_10","level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] Ledger entry completed\u001b[39m","timestamp":"2025-10-04 16:59:17","toAccount":"user_6"}
{"amount":100,"description":"Pagamento teste","fromAccountId":"user_10","level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-SERVICE] Transferência realizada\u001b[39m","timestamp":"2025-10-04 16:59:21","toAccountId":"user_6","transactionId":"TRANSFER_MGCP5CL0_AJFH8"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] System accounts initialized\u001b[39m","timestamp":"2025-10-04 16:59:57"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-API] Payment API Mock rodando na porta 3002\u001b[39m","timestamp":"2025-10-04 16:59:57"}
{"amount":100,"from_user_id":10,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Criando novo pagamento\u001b[39m","payment_method":"pix","timestamp":"2025-10-04 17:00:02","to_user_id":6}
{"amount":100,"entryId":"LEDGER_MGCP6GLO_YYEUU","fromAccount":"user_10","level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] Ledger entry created\u001b[39m","timestamp":"2025-10-04 17:00:13","toAccount":"user_6"}
{"amount":100,"entryId":"LEDGER_MGCP6GLO_YYEUU","fromAccount":"user_10","level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] Ledger entry completed\u001b[39m","timestamp":"2025-10-04 17:00:14","toAccount":"user_6"}
{"amount":100,"description":"Pagamento teste","fromAccountId":"user_10","level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-SERVICE] Transferência realizada\u001b[39m","timestamp":"2025-10-04 17:00:15","toAccountId":"user_6","transactionId":"TRANSFER_MGCP6HU2_VNBJF"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Consultando saldo do usuário 10\u001b[39m","timestamp":"2025-10-04 17:01:58"}
{"amount":100,"from_user_id":10,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Criando novo pagamento\u001b[39m","payment_method":"pix","timestamp":"2025-10-04 17:02:15","to_user_id":6}
{"amount":50,"from_user_id":10,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Criando novo pagamento\u001b[39m","payment_method":"pix","timestamp":"2025-10-04 17:02:40","to_user_id":6}
{"amount":50,"entryId":"LEDGER_MGCP9UG0_V7V1H","fromAccount":"user_10","level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] Ledger entry created\u001b[39m","timestamp":"2025-10-04 17:02:51","toAccount":"user_6"}
{"amount":50,"entryId":"LEDGER_MGCP9UG0_V7V1H","fromAccount":"user_10","level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] Ledger entry completed\u001b[39m","timestamp":"2025-10-04 17:02:51","toAccount":"user_6"}
{"amount":50,"description":"Teste pagamento","fromAccountId":"user_10","level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-SERVICE] Transferência realizada\u001b[39m","timestamp":"2025-10-04 17:02:52","toAccountId":"user_6","transactionId":"TRANSFER_MGCP9VHU_0NOIM"}
{"amount":75,"from_user_id":10,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Criando novo pagamento\u001b[39m","payment_method":"pix","timestamp":"2025-10-04 17:04:40","to_user_id":6}
{"amount":75,"entryId":"LEDGER_MGCPCA0K_ZG9AS","fromAccount":"user_10","level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] Ledger entry created\u001b[39m","timestamp":"2025-10-04 17:04:44","toAccount":"user_6"}
{"amount":75,"entryId":"LEDGER_MGCPCA0K_ZG9AS","fromAccount":"user_10","level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] Ledger entry completed\u001b[39m","timestamp":"2025-10-04 17:04:45","toAccount":"user_6"}
{"amount":75,"description":"Teste pagamento com installment válido","fromAccountId":"user_10","level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-SERVICE] Transferência realizada\u001b[39m","timestamp":"2025-10-04 17:04:46","toAccountId":"user_6","transactionId":"TRANSFER_MGCPCB4B_YNZXI"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] System accounts initialized\u001b[39m","timestamp":"2025-10-04 17:06:07"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-API] Payment API Mock rodando na porta 3002\u001b[39m","timestamp":"2025-10-04 17:06:07"}
{"amount":100,"from_user_id":10,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Criando novo pagamento\u001b[39m","payment_method":"pix","timestamp":"2025-10-04 17:06:15","to_user_id":6}
{"amount":100,"entryId":"LEDGER_MGCPEH74_TM8BD","fromAccount":"user_10","level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] Ledger entry created\u001b[39m","timestamp":"2025-10-04 17:06:27","toAccount":"user_6"}
{"amount":100,"entryId":"LEDGER_MGCPEH74_TM8BD","fromAccount":"user_10","level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] Ledger entry completed\u001b[39m","timestamp":"2025-10-04 17:06:27","toAccount":"user_6"}
{"amount":100,"description":"Pagamento teste","fromAccountId":"user_10","level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-SERVICE] Transferência realizada\u001b[39m","timestamp":"2025-10-04 17:06:28","toAccountId":"user_6","transactionId":"TRANSFER_MGCPEI7O_PGBDO"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Consultando transações do usuário 10\u001b[39m","timestamp":"2025-10-04 17:07:40"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Consultando taxas do usuário 10\u001b[39m","timestamp":"2025-10-04 17:08:31"}
{"amount":100,"from_user_id":10,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Criando novo pagamento\u001b[39m","payment_method":"pix","timestamp":"2025-10-04 17:10:54","to_user_id":6}
{"amount":100,"from_user_id":10,"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Criando novo pagamento\u001b[39m","payment_method":"pix","timestamp":"2025-10-04 17:11:45","to_user_id":6}
{"amount":100,"entryId":"LEDGER_MGCPLC5H_AJG8Z","fromAccount":"user_10","level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] Ledger entry created\u001b[39m","timestamp":"2025-10-04 17:11:47","toAccount":"user_6"}
{"amount":100,"entryId":"LEDGER_MGCPLC5H_AJG8Z","fromAccount":"user_10","level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] Ledger entry completed\u001b[39m","timestamp":"2025-10-04 17:11:48","toAccount":"user_6"}
{"amount":100,"description":"Teste com taxas QI-EDU","fromAccountId":"user_10","level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[CUSTODY-SERVICE] Transferência realizada\u001b[39m","timestamp":"2025-10-04 17:11:48","toAccountId":"user_6","transactionId":"TRANSFER_MGCPLD9Y_Z4V35"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[LEDGER-SERVICE] System accounts initialized\u001b[39m","timestamp":"2025-10-04 17:12:56"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENT-API] Payment API Mock rodando na porta 3002\u001b[39m","timestamp":"2025-10-04 17:12:56"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Consultando taxas do usuário 10\u001b[39m","timestamp":"2025-10-04 17:13:17"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m[PAYMENTS-MAIN] Consultando transações do usuário 10\u001b[39m","timestamp":"2025-10-04 17:13:25"}
